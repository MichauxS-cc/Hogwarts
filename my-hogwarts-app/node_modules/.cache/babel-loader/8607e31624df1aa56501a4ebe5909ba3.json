{"ast":null,"code":"import axios from \"axios\";\nconst buddyListURL = \"http://localhost:3000/db/buddy\";\n\nconst BuddyListReducer = (state = [], action) => {\n  let buddy;\n  let exist;\n\n  switch (action.type) {\n    case \"ADD_BUDDY\":\n      buddy = action.payload;\n\n      const addNewBuddy = async () => {\n        const response = await axios.post(buddyListURL + \"/add\", buddy); //optional chaining to check if response and response data both exist\n\n        if (response === null || response === void 0 ? void 0 : response.data) {\n          state = [...response.data];\n          console.log(\"%c [ state ]\", \"font-size:13px; background:pink; color:#bf2c9f;\", state);\n        }\n      };\n\n      addNewBuddy();\n      return state;\n\n    case \"REMOVE_BUDDY\":\n      buddy = action.payload; // exist = state.find((x) => x.name === buddy.name);\n      // if (exist.qty === 1)\n      //   return [...state].filter((x) => x.name !== buddy.name);\n      // return state.map((x) =>\n      //   x.name === buddy.name ? { ...exist, qty: exist.qty - 1 } : x\n      // );\n\n      return;\n\n    case \"UPDATE_BUDDY\":\n      buddy = action.payload;\n      return;\n    // exist = state.find((x) => x.name === buddy.name);\n    // if (exist.qty === 1)\n    //   return [...state].filter((x) => x.name !== buddy.name);\n    // return state.map((x) =>\n    //   x.name === buddy.name ? { ...exist, qty: exist.qty - 1 } : x\n    // );\n\n    case \"RESET_BUDDY_LIST\":\n      state = [];\n      return state;\n\n    case \"SET_BUDDY_LIST\":\n      const buddyList = action.payload;\n      state = [...buddyList];\n      return state;\n\n    default:\n      return state;\n  }\n};\n\n_c = BuddyListReducer;\nexport default BuddyListReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"BuddyListReducer\");","map":{"version":3,"sources":["/Users/michauxsun/CPSC455/CPSC455-A234/my_hogwarts_app/src/reducers/BuddyListReducer.js"],"names":["axios","buddyListURL","BuddyListReducer","state","action","buddy","exist","type","payload","addNewBuddy","response","post","data","console","log","buddyList"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,MAAMC,YAAY,GAAG,gCAArB;;AAEA,MAAMC,gBAAgB,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AAC/C,MAAIC,KAAJ;AACA,MAAIC,KAAJ;;AACA,UAAQF,MAAM,CAACG,IAAf;AACE,SAAK,WAAL;AACEF,MAAAA,KAAK,GAAGD,MAAM,CAACI,OAAf;;AACA,YAAMC,WAAW,GAAG,YAAY;AAC9B,cAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,IAAN,CAAWV,YAAY,GAAG,MAA1B,EAAkCI,KAAlC,CAAvB,CAD8B,CAG9B;;AACA,YAAIK,QAAJ,aAAIA,QAAJ,uBAAIA,QAAQ,CAAEE,IAAd,EAAoB;AAClBT,UAAAA,KAAK,GAAG,CAAC,GAAGO,QAAQ,CAACE,IAAb,CAAR;AACAC,UAAAA,OAAO,CAACC,GAAR,CACE,cADF,EAEE,iDAFF,EAGEX,KAHF;AAKD;AACF,OAZD;;AAcAM,MAAAA,WAAW;AACX,aAAON,KAAP;;AAEF,SAAK,cAAL;AACEE,MAAAA,KAAK,GAAGD,MAAM,CAACI,OAAf,CADF,CAEE;AACA;AACA;AACA;AACA;AACA;;AACA;;AACF,SAAK,cAAL;AACEH,MAAAA,KAAK,GAAGD,MAAM,CAACI,OAAf;AACA;AACF;AACA;AACA;AACA;AACA;AACA;;AACA,SAAK,kBAAL;AACEL,MAAAA,KAAK,GAAG,EAAR;AACA,aAAOA,KAAP;;AACF,SAAK,gBAAL;AACE,YAAMY,SAAS,GAAGX,MAAM,CAACI,OAAzB;AACAL,MAAAA,KAAK,GAAG,CAAC,GAAGY,SAAJ,CAAR;AACA,aAAOZ,KAAP;;AACF;AACE,aAAOA,KAAP;AA9CJ;AAgDD,CAnDD;;KAAMD,gB;AAqDN,eAAeA,gBAAf","sourcesContent":["import axios from \"axios\";\nconst buddyListURL = \"http://localhost:3000/db/buddy\";\n\nconst BuddyListReducer = (state = [], action) => {\n  let buddy;\n  let exist;\n  switch (action.type) {\n    case \"ADD_BUDDY\":\n      buddy = action.payload;\n      const addNewBuddy = async () => {\n        const response = await axios.post(buddyListURL + \"/add\", buddy);\n\n        //optional chaining to check if response and response data both exist\n        if (response?.data) {\n          state = [...response.data];\n          console.log(\n            \"%c [ state ]\",\n            \"font-size:13px; background:pink; color:#bf2c9f;\",\n            state\n          );\n        }\n      };\n\n      addNewBuddy();\n      return state;\n\n    case \"REMOVE_BUDDY\":\n      buddy = action.payload;\n      // exist = state.find((x) => x.name === buddy.name);\n      // if (exist.qty === 1)\n      //   return [...state].filter((x) => x.name !== buddy.name);\n      // return state.map((x) =>\n      //   x.name === buddy.name ? { ...exist, qty: exist.qty - 1 } : x\n      // );\n      return;\n    case \"UPDATE_BUDDY\":\n      buddy = action.payload;\n      return;\n    // exist = state.find((x) => x.name === buddy.name);\n    // if (exist.qty === 1)\n    //   return [...state].filter((x) => x.name !== buddy.name);\n    // return state.map((x) =>\n    //   x.name === buddy.name ? { ...exist, qty: exist.qty - 1 } : x\n    // );\n    case \"RESET_BUDDY_LIST\":\n      state = [];\n      return state;\n    case \"SET_BUDDY_LIST\":\n      const buddyList = action.payload;\n      state = [...buddyList];\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport default BuddyListReducer;\n"]},"metadata":{},"sourceType":"module"}