{"ast":null,"code":"const ShoppingCartReducer = (state = [], action) => {\n  let equip;\n  let exist;\n  switch (action.type) {\n    case \"ADD_TO_CART\":\n      equip = action.payload;\n      exist = state.find(x => x.name === equip.name);\n      //loop through state, only update the x that x => x.name === equip.name, return the not matching item otherwise\n      if (exist) return state.map(x => x.name === equip.name ? {\n        ...exist,\n        qty: exist.qty + 1\n      } : x);\n      return [...state, {\n        ...equip,\n        qty: 1\n      }];\n    case \"REMOVE_FROM_CART\":\n      equip = action.payload;\n      exist = state.find(x => x.name === equip.name);\n      if (exist.qty === 1) return [...state].filter(x => x.name !== equip.name);\n      return state.map(x => x.name === equip.name ? {\n        ...exist,\n        qty: exist.qty - 1\n      } : x);\n    case \"RESET_CART\":\n      state = [];\n      return state;\n    default:\n      return state;\n  }\n};\n_c = ShoppingCartReducer;\nexport default ShoppingCartReducer;\nvar _c;\n$RefreshReg$(_c, \"ShoppingCartReducer\");","map":{"version":3,"names":["ShoppingCartReducer","state","action","equip","exist","type","payload","find","x","name","map","qty","filter","_c","$RefreshReg$"],"sources":["/Users/michauxsun/Desktop/CPSC455-A234/my-hogwarts-app/src/reducers/ShoppingCartReducer.js"],"sourcesContent":["const ShoppingCartReducer = (state = [], action) => {\n  let equip;\n  let exist;\n  switch (action.type) {\n    case \"ADD_TO_CART\":\n      equip = action.payload;\n      exist = state.find((x) => x.name === equip.name);\n      //loop through state, only update the x that x => x.name === equip.name, return the not matching item otherwise\n      if (exist)\n        return state.map((x) =>\n          x.name === equip.name ? { ...exist, qty: exist.qty + 1 } : x\n        );\n      return [...state, { ...equip, qty: 1 }];\n    case \"REMOVE_FROM_CART\":\n      equip = action.payload;\n      exist = state.find((x) => x.name === equip.name);\n      if (exist.qty === 1)\n        return [...state].filter((x) => x.name !== equip.name);\n      return state.map((x) =>\n        x.name === equip.name ? { ...exist, qty: exist.qty - 1 } : x\n      );\n    case \"RESET_CART\":\n      state = [];\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport default ShoppingCartReducer;\n"],"mappings":"AAAA,MAAMA,mBAAmB,GAAGA,CAACC,KAAK,GAAG,EAAE,EAAEC,MAAM,KAAK;EAClD,IAAIC,KAAK;EACT,IAAIC,KAAK;EACT,QAAQF,MAAM,CAACG,IAAI;IACjB,KAAK,aAAa;MAChBF,KAAK,GAAGD,MAAM,CAACI,OAAO;MACtBF,KAAK,GAAGH,KAAK,CAACM,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,IAAI,KAAKN,KAAK,CAACM,IAAI,CAAC;MAChD;MACA,IAAIL,KAAK,EACP,OAAOH,KAAK,CAACS,GAAG,CAAEF,CAAC,IACjBA,CAAC,CAACC,IAAI,KAAKN,KAAK,CAACM,IAAI,GAAG;QAAE,GAAGL,KAAK;QAAEO,GAAG,EAAEP,KAAK,CAACO,GAAG,GAAG;MAAE,CAAC,GAAGH,CAC7D,CAAC;MACH,OAAO,CAAC,GAAGP,KAAK,EAAE;QAAE,GAAGE,KAAK;QAAEQ,GAAG,EAAE;MAAE,CAAC,CAAC;IACzC,KAAK,kBAAkB;MACrBR,KAAK,GAAGD,MAAM,CAACI,OAAO;MACtBF,KAAK,GAAGH,KAAK,CAACM,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,IAAI,KAAKN,KAAK,CAACM,IAAI,CAAC;MAChD,IAAIL,KAAK,CAACO,GAAG,KAAK,CAAC,EACjB,OAAO,CAAC,GAAGV,KAAK,CAAC,CAACW,MAAM,CAAEJ,CAAC,IAAKA,CAAC,CAACC,IAAI,KAAKN,KAAK,CAACM,IAAI,CAAC;MACxD,OAAOR,KAAK,CAACS,GAAG,CAAEF,CAAC,IACjBA,CAAC,CAACC,IAAI,KAAKN,KAAK,CAACM,IAAI,GAAG;QAAE,GAAGL,KAAK;QAAEO,GAAG,EAAEP,KAAK,CAACO,GAAG,GAAG;MAAE,CAAC,GAAGH,CAC7D,CAAC;IACH,KAAK,YAAY;MACfP,KAAK,GAAG,EAAE;MACV,OAAOA,KAAK;IACd;MACE,OAAOA,KAAK;EAChB;AACF,CAAC;AAACY,EAAA,GA3BIb,mBAAmB;AA6BzB,eAAeA,mBAAmB;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}