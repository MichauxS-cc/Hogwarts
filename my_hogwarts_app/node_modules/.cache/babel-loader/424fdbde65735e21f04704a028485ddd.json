{"ast":null,"code":"var _jsxFileName = \"/Users/michauxsun/CPSC455/CPSC455-A234/my_hogwarts_app/src/components/DiagonAlley.js\",\n    _s = $RefreshSig$();\n\n// addToCauldron() and removeFromCauldron() logic were borrow from https://www.youtube.com/watch?v=AmIdY1Eb8tY\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"../css/DiagonAlley.css\";\nimport EquipList from \"./EquipList.js\";\nimport Summery from \"./Summery.js\";\nimport ShoppingCart from \"./ShoppingCart.js\";\nimport HarryPotterFontImg from \"../pics/harry-potter-font-img.png\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DiagonAlley() {\n  _s();\n\n  const [equipments, setEquipments] = useState([]); // const equipmentDataURL = \"http://localhost:3000/equipDb\";\n\n  const equipmentDataURL = \"http://localhost:3000/db/equipment\";\n  const yearSelect = useRef();\n  const catSelect = useRef(); // const [cartItems, setCartItems] = useState([]);\n\n  const [modal, setModal] = useState({\n    visible: false\n  });\n\n  const getEquipmentData = async () => {\n    console.log(\">>>>I'm getEquipmentData()<<<<<<<\");\n    const response = await axios.get(equipmentDataURL).catch(err => console.log(\"Error *** first load: \", err));\n\n    if (response && response.data) {\n      setEquipments(response.data);\n    }\n  };\n\n  useEffect(() => {\n    console.log(\">>>>I'm useEffect()<<<<<<<\");\n    getEquipmentData();\n  }, []); // accept the equip that needs to be added to the cart\n  // exist is to try to find the item x, whose name === the equip.name that I need to add\n  // if exist, increase the quantity of that equip\n  // const addToCauldron = (equip) => {\n  //   const exist = cartItems.find((x) => x.name === equip.name);\n  //   if (exist) {\n  //     //loop through cartItems, only update the x that x => x.name === equip.name, return the not matching item otherwise\n  //     setCartItems(\n  //       cartItems.map((x) =>\n  //         x.name === equip.name ? { ...exist, qty: exist.qty + 1 } : x\n  //       )\n  //     );\n  //   } else {\n  //     setCartItems([...cartItems, { ...equip, qty: 1 }]);\n  //   }\n  // };\n  // const removeFromCauldron = (equip) => {\n  //   const exist = cartItems.find((x) => x.name === equip.name);\n  //   if (exist.qty === 1) {\n  //     setCartItems([...cartItems].filter((x) => x.name !== equip.name));\n  //   } else {\n  //     setCartItems(\n  //       cartItems.map((x) =>\n  //         x.name === equip.name ? { ...exist, qty: exist.qty - 1 } : x\n  //       )\n  //     );\n  //   }\n  // };\n\n  function showSummery() {\n    let newModal = { ...modal\n    };\n    newModal.visible = true;\n    setModal(newModal);\n  }\n\n  function closeModal() {\n    let newModal = { ...modal\n    };\n    newModal.visible = false;\n    setModal(newModal);\n  }\n\n  function resetCart() {\n    alert(\"Order Received!\"); // setCartItems([]);\n  }\n\n  function sortByPriceHL() {\n    const newEquips = [...equipments];\n    newEquips.sort((a, b) => {\n      return b.price - a.price;\n    }); // setEquipments(newEquips);\n  }\n\n  function sortByPriceLH() {\n    const newEquips = [...equipments];\n    newEquips.sort((a, b) => {\n      return a.price - b.price;\n    }); // setEquipments(newEquips);\n  }\n\n  function getProducts() {\n    let year = yearSelect.current.value;\n    let cat = catSelect.current.value;\n\n    const sortByYear = async () => {\n      const response = await axios.get(equipmentDataURL + \"/sortByYear/\" + year + \"/filterCat/\" + cat);\n\n      if (response === null || response === void 0 ? void 0 : response.data) {\n        setEquipments(response.data);\n      }\n    };\n\n    sortByYear();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"header-img\",\n            src: HarryPotterFontImg,\n            alt: \"Harry Potter fonts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overlay-black\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn \",\n          type: \"button\",\n          children: \"Sort by year stand\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"yearSelect\",\n          ref: yearSelect,\n          onChange: getProducts,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"0\",\n            children: \"All year \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"1\",\n            children: \"1st year\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"2\",\n            children: \"2nd year\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"3\",\n            children: \"3rd year\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"4\",\n            children: \"4th year\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"catSelect\",\n          ref: catSelect,\n          onChange: getProducts,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"all\",\n            children: \"All categories \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"book\",\n            children: \"Book \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"gear\",\n            children: \"Gear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"powder\",\n            children: \"Powder\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"uncategorised\",\n            children: \"Uncategorised\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => sortByPriceHL(),\n          className: \"btn\",\n          type: \"button\",\n          children: \"Price High to Low\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => sortByPriceLH(),\n          className: \"btn\",\n          type: \"button\",\n          children: \"Price Low to High\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ShoppingCart, {\n          countEquipments: cartItems.length,\n          showModal: showSummery\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(EquipList, {\n          equipments: equipments\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Summery, {\n        modal: modal,\n        closeModal: closeModal // addToCauldron={addToCauldron}\n        // removeFromCauldron={removeFromCauldron}\n        ,\n        cartItems: cartItems // resetCart={resetCart}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DiagonAlley, \"O2bXS7dhZ65IfX5fdixX4cPBnFA=\");\n\n_c = DiagonAlley;\nexport default DiagonAlley;\n\nvar _c;\n\n$RefreshReg$(_c, \"DiagonAlley\");","map":{"version":3,"sources":["/Users/michauxsun/CPSC455/CPSC455-A234/my_hogwarts_app/src/components/DiagonAlley.js"],"names":["React","useState","useEffect","useRef","EquipList","Summery","ShoppingCart","HarryPotterFontImg","axios","DiagonAlley","equipments","setEquipments","equipmentDataURL","yearSelect","catSelect","modal","setModal","visible","getEquipmentData","console","log","response","get","catch","err","data","showSummery","newModal","closeModal","resetCart","alert","sortByPriceHL","newEquips","sort","a","b","price","sortByPriceLH","getProducts","year","current","value","cat","sortByYear","cartItems","length"],"mappings":"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","sourcesContent":["// addToCauldron() and removeFromCauldron() logic were borrow from https://www.youtube.com/watch?v=AmIdY1Eb8tY\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"../css/DiagonAlley.css\";\nimport EquipList from \"./EquipList.js\";\nimport Summery from \"./Summery.js\";\nimport ShoppingCart from \"./ShoppingCart.js\";\nimport HarryPotterFontImg from \"../pics/harry-potter-font-img.png\";\n\nimport axios from \"axios\";\n\nfunction DiagonAlley() {\n  const [equipments, setEquipments] = useState([]);\n  // const equipmentDataURL = \"http://localhost:3000/equipDb\";\n  const equipmentDataURL = \"http://localhost:3000/db/equipment\";\n\n  const yearSelect = useRef();\n  const catSelect = useRef();\n\n  // const [cartItems, setCartItems] = useState([]);\n  const [modal, setModal] = useState({ visible: false });\n\n  const getEquipmentData = async () => {\n    console.log(\">>>>I'm getEquipmentData()<<<<<<<\");\n\n    const response = await axios\n      .get(equipmentDataURL)\n      .catch((err) => console.log(\"Error *** first load: \", err));\n\n    if (response && response.data) {\n      setEquipments(response.data);\n    }\n  };\n  useEffect(() => {\n    console.log(\">>>>I'm useEffect()<<<<<<<\");\n    getEquipmentData();\n  }, []);\n\n  // accept the equip that needs to be added to the cart\n  // exist is to try to find the item x, whose name === the equip.name that I need to add\n  // if exist, increase the quantity of that equip\n  // const addToCauldron = (equip) => {\n  //   const exist = cartItems.find((x) => x.name === equip.name);\n  //   if (exist) {\n  //     //loop through cartItems, only update the x that x => x.name === equip.name, return the not matching item otherwise\n  //     setCartItems(\n  //       cartItems.map((x) =>\n  //         x.name === equip.name ? { ...exist, qty: exist.qty + 1 } : x\n  //       )\n  //     );\n  //   } else {\n  //     setCartItems([...cartItems, { ...equip, qty: 1 }]);\n  //   }\n  // };\n\n  // const removeFromCauldron = (equip) => {\n  //   const exist = cartItems.find((x) => x.name === equip.name);\n  //   if (exist.qty === 1) {\n  //     setCartItems([...cartItems].filter((x) => x.name !== equip.name));\n  //   } else {\n  //     setCartItems(\n  //       cartItems.map((x) =>\n  //         x.name === equip.name ? { ...exist, qty: exist.qty - 1 } : x\n  //       )\n  //     );\n  //   }\n  // };\n\n  function showSummery() {\n    let newModal = { ...modal };\n    newModal.visible = true;\n    setModal(newModal);\n  }\n\n  function closeModal() {\n    let newModal = { ...modal };\n    newModal.visible = false;\n    setModal(newModal);\n  }\n\n  function resetCart() {\n    alert(\"Order Received!\");\n    // setCartItems([]);\n  }\n\n  function sortByPriceHL() {\n    const newEquips = [...equipments];\n    newEquips.sort((a, b) => {\n      return b.price - a.price;\n    });\n    // setEquipments(newEquips);\n  }\n\n  function sortByPriceLH() {\n    const newEquips = [...equipments];\n    newEquips.sort((a, b) => {\n      return a.price - b.price;\n    });\n    // setEquipments(newEquips);\n  }\n\n  function getProducts() {\n    let year = yearSelect.current.value;\n    let cat = catSelect.current.value;\n\n    const sortByYear = async () => {\n      const response = await axios.get(\n        equipmentDataURL + \"/sortByYear/\" + year + \"/filterCat/\" + cat\n      );\n\n      if (response?.data) {\n        setEquipments(response.data);\n      }\n    };\n    sortByYear();\n  }\n\n  return (\n    <div>\n      <div className=\"max-container\">\n        <h1>\n          <div>\n            <img\n              className=\"header-img\"\n              src={HarryPotterFontImg}\n              alt=\"Harry Potter fonts\"\n            ></img>\n          </div>\n        </h1>\n        <div className=\"overlay-black\">\n          <button className=\"btn \" type=\"button\">\n            Sort by year stand\n          </button>\n          <select id=\"yearSelect\" ref={yearSelect} onChange={getProducts}>\n            <option value=\"0\">All year </option>\n            <option value=\"1\">1st year</option>\n            <option value=\"2\">2nd year</option>\n            <option value=\"3\">3rd year</option>\n            <option value=\"4\">4th year</option>\n          </select>\n\n          <select id=\"catSelect\" ref={catSelect} onChange={getProducts}>\n            <option value=\"all\">All categories </option>\n            <option value=\"book\">Book </option>\n            <option value=\"gear\">Gear</option>\n            <option value=\"powder\">Powder</option>\n            <option value=\"uncategorised\">Uncategorised</option>\n          </select>\n\n          <button onClick={() => sortByPriceHL()} className=\"btn\" type=\"button\">\n            Price High to Low\n          </button>\n          <button onClick={() => sortByPriceLH()} className=\"btn\" type=\"button\">\n            Price Low to High\n          </button>\n\n          <ShoppingCart\n            countEquipments={cartItems.length}\n            showModal={showSummery}\n          />\n\n          <EquipList equipments={equipments} />\n        </div>\n        <Summery\n          modal={modal}\n          closeModal={closeModal}\n          // addToCauldron={addToCauldron}\n          // removeFromCauldron={removeFromCauldron}\n          cartItems={cartItems}\n          // resetCart={resetCart}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default DiagonAlley;\n"]},"metadata":{},"sourceType":"module"}