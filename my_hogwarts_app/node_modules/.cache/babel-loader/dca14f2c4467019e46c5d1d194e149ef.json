{"ast":null,"code":"var _jsxFileName = \"/Users/michauxsun/CPSC455/CPSC455-A234/my_hogwarts_app/src/components/Modal.js\",\n    _s = $RefreshSig$();\n\nimport \"../css/Modal.css\";\nimport React, { useRef } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setModal, closeModal, switchModalMode, updateModal } from \"../actions\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Modal() {\n  _s();\n\n  const buddyListURL = \"http://localhost:3000/db/buddy\";\n  const modal = useSelector(state => state.cardModal);\n  const dispatch = useDispatch();\n  const editName = useRef();\n  const editDescription = useRef();\n  let visible = \"hidden\";\n  if (modal.visible) visible = \"visible\";\n\n  function finishEditing() {\n    const updateBuddyInfo = {\n      name: editName,\n      description: editDescription\n    };\n\n    const updateBuddy = async () => {\n      const response = await axios.patch(buddyListURL + \"/update/\" + targetId, updateBuddyInfo).catch(err => {\n        alert(\"Error *** adding new buddy: \" + err.response.data.message);\n      });\n      if (response === null || response === void 0 ? void 0 : response.data) dispatch(setBuddyList(response.data));\n    };\n\n    dispatch(updateModal({\n      name: editName.current.value,\n      description: editDescription.current.value\n    }));\n  }\n\n  function renderEditableComponent() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `modal-container ${visible}`,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => dispatch(closeModal()),\n        className: \"modal-close\",\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-card-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-img-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"modal-img\",\n            src: modal.imgURL,\n            alt: modal.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-text-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              ref: editName,\n              type: \"text\",\n              defaultValue: modal.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              id: \"input-edit-description\",\n              ref: editDescription,\n              type: \"text\",\n              rows: \"10\",\n              defaultValue: modal.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: finishEditing,\n              className: \"edit-btn\",\n              children: \"Done\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  }\n\n  function renderNonEditableComponent() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `modal-container ${visible}`,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => dispatch(closeModal()),\n        className: \"modal-close\",\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-card-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-img-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"modal-img\",\n            src: modal.imgURL,\n            alt: modal.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-text-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"modal-name\",\n            children: modal.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"modal-description\",\n            children: modal.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => dispatch(switchModalMode()),\n            className: \"edit-btn\",\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this);\n  }\n\n  return modal.isEditable ? renderEditableComponent() : renderNonEditableComponent();\n}\n\n_s(Modal, \"scpDT5neQXBBtmWKIW8oQcYMfjM=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Modal;\nexport default Modal;\n\nvar _c;\n\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"sources":["/Users/michauxsun/CPSC455/CPSC455-A234/my_hogwarts_app/src/components/Modal.js"],"names":["React","useRef","useSelector","useDispatch","setModal","closeModal","switchModalMode","updateModal","axios","Modal","buddyListURL","modal","state","cardModal","dispatch","editName","editDescription","visible","finishEditing","updateBuddyInfo","name","description","updateBuddy","response","patch","targetId","catch","err","alert","data","message","setBuddyList","current","value","renderEditableComponent","imgURL","renderNonEditableComponent","isEditable"],"mappings":"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","sourcesContent":["import \"../css/Modal.css\";\nimport React, { useRef } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setModal, closeModal, switchModalMode, updateModal } from \"../actions\";\nimport axios from \"axios\";\n\nfunction Modal() {\n  const buddyListURL = \"http://localhost:3000/db/buddy\";\n  const modal = useSelector((state) => state.cardModal);\n  const dispatch = useDispatch();\n\n  const editName = useRef();\n  const editDescription = useRef();\n  let visible = \"hidden\";\n  if (modal.visible) visible = \"visible\";\n\n  function finishEditing() {\n    const updateBuddyInfo = {\n      name: editName,\n      description: editDescription,\n    };\n\n    const updateBuddy = async () => {\n      const response = await axios\n        .patch(buddyListURL + \"/update/\" + targetId, updateBuddyInfo)\n        .catch((err) => {\n          alert(\"Error *** adding new buddy: \" + err.response.data.message);\n        });\n\n      if (response?.data) dispatch(setBuddyList(response.data));\n    };\n\n    dispatch(\n      updateModal({\n        name: editName.current.value,\n        description: editDescription.current.value,\n      })\n    );\n  }\n\n  function renderEditableComponent() {\n    return (\n      <div className={`modal-container ${visible}`}>\n        <button onClick={() => dispatch(closeModal())} className=\"modal-close\">\n          +\n        </button>\n        <div className=\"modal-card-container\">\n          <div className=\"modal-img-wrapper\">\n            <img className=\"modal-img\" src={modal.imgURL} alt={modal.name} />\n          </div>\n          <div className=\"modal-text-wrapper\">\n            <div>\n              <input ref={editName} type=\"text\" defaultValue={modal.name} />\n              <textarea\n                id=\"input-edit-description\"\n                ref={editDescription}\n                type=\"text\"\n                rows=\"10\"\n                defaultValue={modal.description}\n              />\n              <button onClick={finishEditing} className=\"edit-btn\">\n                Done\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  function renderNonEditableComponent() {\n    return (\n      <div className={`modal-container ${visible}`}>\n        <button onClick={() => dispatch(closeModal())} className=\"modal-close\">\n          +\n        </button>\n        <div className=\"modal-card-container\">\n          <div className=\"modal-img-wrapper\">\n            <img className=\"modal-img\" src={modal.imgURL} alt={modal.name} />\n          </div>\n          <div className=\"modal-text-wrapper\">\n            <h3 className=\"modal-name\">{modal.name}</h3>\n            <p className=\"modal-description\">{modal.description}</p>\n            <button\n              onClick={() => dispatch(switchModalMode())}\n              className=\"edit-btn\"\n            >\n              Edit\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return modal.isEditable\n    ? renderEditableComponent()\n    : renderNonEditableComponent();\n}\n\nexport default Modal;\n"]},"metadata":{},"sourceType":"module"}