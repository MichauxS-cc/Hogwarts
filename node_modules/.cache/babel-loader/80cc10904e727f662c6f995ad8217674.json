{"ast":null,"code":"import axios from \"axios\";\nconst buddyListURL = \"http://localhost:3000/db/buddy\";\n\nasync function addBuddy(buddy) {\n  return new Promise(axios.post(buddyListURL + \"/add\", buddy));\n}\n\nconst BuddyListReducer = (state = [], action) => {\n  let buddy;\n  let exist;\n\n  switch (action.type) {\n    case \"ADD_BUDDY\":\n      buddy = action.payload; // const addNewBuddy = async () => {\n      //   const response = await axios.post(buddyListURL + \"/add\", buddy);\n      //   //optional chaining to check if response and response data both exist\n      //   if (response?.data) {\n      //     state = [...response.data];\n      //   }\n      // };\n\n      addBuddy(buddy).then(function (data) {});\n      addNewBuddy();\n      return state;\n\n    case \"REMOVE_BUDDY\":\n      buddy = action.payload; // exist = state.find((x) => x.name === buddy.name);\n      // if (exist.qty === 1)\n      //   return [...state].filter((x) => x.name !== buddy.name);\n      // return state.map((x) =>\n      //   x.name === buddy.name ? { ...exist, qty: exist.qty - 1 } : x\n      // );\n\n      return;\n\n    case \"UPDATE_BUDDY\":\n      buddy = action.payload;\n      return;\n    // exist = state.find((x) => x.name === buddy.name);\n    // if (exist.qty === 1)\n    //   return [...state].filter((x) => x.name !== buddy.name);\n    // return state.map((x) =>\n    //   x.name === buddy.name ? { ...exist, qty: exist.qty - 1 } : x\n    // );\n\n    case \"RESET_BUDDY_LIST\":\n      state = [];\n      return state;\n\n    case \"SET_BUDDY_LIST\":\n      const buddyList = action.payload;\n      state = [...buddyList];\n      return state;\n\n    default:\n      return state;\n  }\n};\n\n_c = BuddyListReducer;\nexport default BuddyListReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"BuddyListReducer\");","map":{"version":3,"sources":["/Users/michauxsun/CPSC455/CPSC455-A234/my_hogwarts_app/src/reducers/BuddyListReducer.js"],"names":["axios","buddyListURL","addBuddy","buddy","Promise","post","BuddyListReducer","state","action","exist","type","payload","then","data","addNewBuddy","buddyList"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,MAAMC,YAAY,GAAG,gCAArB;;AAEA,eAAeC,QAAf,CAAwBC,KAAxB,EAA+B;AAC7B,SAAO,IAAIC,OAAJ,CAAYJ,KAAK,CAACK,IAAN,CAAWJ,YAAY,GAAG,MAA1B,EAAkCE,KAAlC,CAAZ,CAAP;AACD;;AAED,MAAMG,gBAAgB,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AAC/C,MAAIL,KAAJ;AACA,MAAIM,KAAJ;;AACA,UAAQD,MAAM,CAACE,IAAf;AACE,SAAK,WAAL;AACEP,MAAAA,KAAK,GAAGK,MAAM,CAACG,OAAf,CADF,CAEE;AACA;AAEA;AACA;AACA;AACA;AACA;;AACAT,MAAAA,QAAQ,CAACC,KAAD,CAAR,CAAgBS,IAAhB,CAAqB,UAAUC,IAAV,EAAgB,CAAE,CAAvC;AAEAC,MAAAA,WAAW;AACX,aAAOP,KAAP;;AAEF,SAAK,cAAL;AACEJ,MAAAA,KAAK,GAAGK,MAAM,CAACG,OAAf,CADF,CAEE;AACA;AACA;AACA;AACA;AACA;;AACA;;AACF,SAAK,cAAL;AACER,MAAAA,KAAK,GAAGK,MAAM,CAACG,OAAf;AACA;AACF;AACA;AACA;AACA;AACA;AACA;;AACA,SAAK,kBAAL;AACEJ,MAAAA,KAAK,GAAG,EAAR;AACA,aAAOA,KAAP;;AACF,SAAK,gBAAL;AACE,YAAMQ,SAAS,GAAGP,MAAM,CAACG,OAAzB;AACAJ,MAAAA,KAAK,GAAG,CAAC,GAAGQ,SAAJ,CAAR;AACA,aAAOR,KAAP;;AACF;AACE,aAAOA,KAAP;AA1CJ;AA4CD,CA/CD;;KAAMD,gB;AAiDN,eAAeA,gBAAf","sourcesContent":["import axios from \"axios\";\nconst buddyListURL = \"http://localhost:3000/db/buddy\";\n\nasync function addBuddy(buddy) {\n  return new Promise(axios.post(buddyListURL + \"/add\", buddy));\n}\n\nconst BuddyListReducer = (state = [], action) => {\n  let buddy;\n  let exist;\n  switch (action.type) {\n    case \"ADD_BUDDY\":\n      buddy = action.payload;\n      // const addNewBuddy = async () => {\n      //   const response = await axios.post(buddyListURL + \"/add\", buddy);\n\n      //   //optional chaining to check if response and response data both exist\n      //   if (response?.data) {\n      //     state = [...response.data];\n      //   }\n      // };\n      addBuddy(buddy).then(function (data) {});\n\n      addNewBuddy();\n      return state;\n\n    case \"REMOVE_BUDDY\":\n      buddy = action.payload;\n      // exist = state.find((x) => x.name === buddy.name);\n      // if (exist.qty === 1)\n      //   return [...state].filter((x) => x.name !== buddy.name);\n      // return state.map((x) =>\n      //   x.name === buddy.name ? { ...exist, qty: exist.qty - 1 } : x\n      // );\n      return;\n    case \"UPDATE_BUDDY\":\n      buddy = action.payload;\n      return;\n    // exist = state.find((x) => x.name === buddy.name);\n    // if (exist.qty === 1)\n    //   return [...state].filter((x) => x.name !== buddy.name);\n    // return state.map((x) =>\n    //   x.name === buddy.name ? { ...exist, qty: exist.qty - 1 } : x\n    // );\n    case \"RESET_BUDDY_LIST\":\n      state = [];\n      return state;\n    case \"SET_BUDDY_LIST\":\n      const buddyList = action.payload;\n      state = [...buddyList];\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport default BuddyListReducer;\n"]},"metadata":{},"sourceType":"module"}