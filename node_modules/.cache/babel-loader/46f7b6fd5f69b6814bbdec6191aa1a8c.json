{"ast":null,"code":"var _jsxFileName = \"/Users/michauxsun/CPSC455/CPSC455-A234/my_hogwarts_app/src/components/Modal.js\",\n    _s = $RefreshSig$();\n\nimport \"../css/Modal.css\";\nimport React, { useRef } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setModal, closeModal } from \"../actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Modal() {\n  _s();\n\n  const modal = useSelector(state => state.cardModal);\n  const dispatch = useDispatch();\n  const editName = useRef();\n  const editDescription = useRef();\n  let visible = \"hidden\";\n  if (props.modal.visible) visible = \"visible\";\n\n  function changeEditMode() {\n    props.switchMode(props.modal);\n  }\n\n  function finishEditing() {\n    props.updateModal(editName.current.value, editDescription.current.value, props.modal._id);\n    console.log(\"[ props.modal ]\", props.modal._id);\n  }\n\n  function renderEditableComponent() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `modal-container ${visible}`,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        className: \"modal-close\",\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-card-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-img-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"modal-img\",\n            src: props.modal.imgURL,\n            alt: props.modal.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-text-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              ref: editName,\n              type: \"text\",\n              defaultValue: props.modal.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              id: \"input-edit-description\",\n              ref: editDescription,\n              type: \"text\",\n              rows: \"10\",\n              defaultValue: props.modal.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: finishEditing,\n              className: \"edit-btn\",\n              children: \"Done\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  }\n\n  function renderNonEditableComponent() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `modal-container ${visible}`,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => dispatch(closeModal()),\n        className: \"modal-close\",\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-card-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-img-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"modal-img\",\n            src: props.modal.imgURL,\n            alt: props.modal.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-text-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"modal-name\",\n            children: props.modal.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"modal-description\",\n            children: props.modal.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: changeEditMode,\n            className: \"edit-btn\",\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this);\n  }\n\n  return props.modal.isEditable ? renderEditableComponent() : renderNonEditableComponent();\n}\n\n_s(Modal, \"scpDT5neQXBBtmWKIW8oQcYMfjM=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Modal;\nexport default Modal;\n\nvar _c;\n\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"sources":["/Users/michauxsun/CPSC455/CPSC455-A234/my_hogwarts_app/src/components/Modal.js"],"names":["React","useRef","useSelector","useDispatch","setModal","closeModal","Modal","modal","state","cardModal","dispatch","editName","editDescription","visible","props","changeEditMode","switchMode","finishEditing","updateModal","current","value","_id","console","log","renderEditableComponent","handleClick","imgURL","name","description","renderNonEditableComponent","isEditable"],"mappings":"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","sourcesContent":["import \"../css/Modal.css\";\nimport React, { useRef } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setModal, closeModal } from \"../actions\";\n\nfunction Modal() {\n  const modal = useSelector((state) => state.cardModal);\n  const dispatch = useDispatch();\n\n  const editName = useRef();\n  const editDescription = useRef();\n  let visible = \"hidden\";\n  if (props.modal.visible) visible = \"visible\";\n\n  function changeEditMode() {\n    props.switchMode(props.modal);\n  }\n\n  function finishEditing() {\n    props.updateModal(\n      editName.current.value,\n      editDescription.current.value,\n      props.modal._id\n    );\n    console.log(\"[ props.modal ]\", props.modal._id);\n  }\n\n  function renderEditableComponent() {\n    return (\n      <div className={`modal-container ${visible}`}>\n        <button onClick={handleClick} className=\"modal-close\">\n          +\n        </button>\n        <div className=\"modal-card-container\">\n          <div className=\"modal-img-wrapper\">\n            <img\n              className=\"modal-img\"\n              src={props.modal.imgURL}\n              alt={props.modal.name}\n            />\n          </div>\n          <div className=\"modal-text-wrapper\">\n            <div>\n              <input\n                ref={editName}\n                type=\"text\"\n                defaultValue={props.modal.name}\n              />\n              <textarea\n                id=\"input-edit-description\"\n                ref={editDescription}\n                type=\"text\"\n                rows=\"10\"\n                defaultValue={props.modal.description}\n              />\n              <button onClick={finishEditing} className=\"edit-btn\">\n                Done\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  function renderNonEditableComponent() {\n    return (\n      <div className={`modal-container ${visible}`}>\n        <button onClick={() => dispatch(closeModal())} className=\"modal-close\">\n          +\n        </button>\n        <div className=\"modal-card-container\">\n          <div className=\"modal-img-wrapper\">\n            <img\n              className=\"modal-img\"\n              src={props.modal.imgURL}\n              alt={props.modal.name}\n            />\n          </div>\n          <div className=\"modal-text-wrapper\">\n            <h3 className=\"modal-name\">{props.modal.name}</h3>\n            <p className=\"modal-description\">{props.modal.description}</p>\n            <button onClick={changeEditMode} className=\"edit-btn\">\n              Edit\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return props.modal.isEditable\n    ? renderEditableComponent()\n    : renderNonEditableComponent();\n}\n\nexport default Modal;\n"]},"metadata":{},"sourceType":"module"}