{"ast":null,"code":"var _jsxFileName = \"/Users/michauxsun/CPSC455/CPSC455-A234/my_hogwarts_app/src/components/DiagonAlley.js\",\n    _s = $RefreshSig$();\n\n// addToCauldron() and removeFromCauldron() logic were borrow from https://www.youtube.com/watch?v=AmIdY1Eb8tY\nimport React, { useState } from \"react\";\nimport \"../css/DiagonAlley.css\";\nimport EquipList from \"./EquipList.js\";\nimport Summery from \"./Summery.js\";\nimport ShoppingCart from \"./ShoppingCart.js\";\nimport equipmentDatabase from \"./equipmentDatabase.js\";\nimport HarryPotterFontImg from \"../pics/harry-potter-font-img.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DiagonAlley() {\n  _s();\n\n  const {\n    equipments\n  } = equipmentDatabase;\n  const [cartItems, setCartItems] = useState([]);\n  const [modal, setModal] = useState({\n    visible: false\n  }); // accept the equip that needs to be added to the cart\n  // exist is to try to find the item x, whose name === the equip.name that I need to add\n  // if exist, increase the quantity of that equip\n\n  const addToCauldron = equip => {\n    const exist = cartItems.find(x => x.name === equip.name);\n\n    if (exist) {\n      //loop through cartItems, only update the x that x => x.name === equip.name, return the not matching item otherwise\n      setCartItems(cartItems.map(x => x.name === equip.name ? { ...exist,\n        qty: exist.qty + 1\n      } : x));\n    } else {\n      setCartItems([...cartItems, { ...equip,\n        qty: 1\n      }]);\n    }\n  };\n\n  const removeFromCauldron = equip => {\n    const exist = cartItems.find(x => x.name === equip.name);\n\n    if (exist.qty === 1) {\n      setCartItems([...cartItems].filter(x => x.name !== equip.name));\n    } else {\n      setCartItems(cartItems.map(x => x.name === equip.name ? { ...exist,\n        qty: exist.qty - 1\n      } : x));\n    }\n  };\n\n  function showSummery() {\n    let newModal = { ...modal\n    };\n    newModal.visible = true;\n    setModal(newModal);\n  }\n\n  function closeModal() {\n    let newModal = { ...modal\n    };\n    newModal.visible = false;\n    setModal(newModal);\n  }\n\n  function resetCart() {\n    alert(\"Order Received!\");\n    setCartItems([]);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"header-img\",\n            src: HarryPotterFontImg,\n            alt: \"Harry Potter fonts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overlay-black\",\n        children: [/*#__PURE__*/_jsxDEV(ShoppingCart, {\n          countEquipments: cartItems.length,\n          showModal: showSummery\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(EquipList, {\n          addToCauldron: addToCauldron,\n          equipments: equipments\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Summery, {\n        modal: modal,\n        closeModal: closeModal,\n        addToCauldron: addToCauldron,\n        removeFromCauldron: removeFromCauldron,\n        cartItems: cartItems,\n        resetCart: resetCart\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DiagonAlley, \"AsW7t+Lzkyv0Ci890Ij3fGYffUc=\");\n\n_c = DiagonAlley;\nexport default DiagonAlley;\n\nvar _c;\n\n$RefreshReg$(_c, \"DiagonAlley\");","map":{"version":3,"sources":["/Users/michauxsun/CPSC455/CPSC455-A234/my_hogwarts_app/src/components/DiagonAlley.js"],"names":["React","useState","EquipList","Summery","ShoppingCart","equipmentDatabase","HarryPotterFontImg","DiagonAlley","equipments","cartItems","setCartItems","modal","setModal","visible","addToCauldron","equip","exist","find","x","name","map","qty","removeFromCauldron","filter","showSummery","newModal","closeModal","resetCart","alert","length"],"mappings":"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","sourcesContent":["// addToCauldron() and removeFromCauldron() logic were borrow from https://www.youtube.com/watch?v=AmIdY1Eb8tY\n\nimport React, { useState } from \"react\";\nimport \"../css/DiagonAlley.css\";\nimport EquipList from \"./EquipList.js\";\nimport Summery from \"./Summery.js\";\nimport ShoppingCart from \"./ShoppingCart.js\";\nimport equipmentDatabase from \"./equipmentDatabase.js\";\nimport HarryPotterFontImg from \"../pics/harry-potter-font-img.png\";\n\nfunction DiagonAlley() {\n    const { equipments } = equipmentDatabase;\n    const [cartItems, setCartItems] = useState([]);\n    const [modal, setModal] = useState({ visible: false });\n\n    // accept the equip that needs to be added to the cart\n    // exist is to try to find the item x, whose name === the equip.name that I need to add\n    // if exist, increase the quantity of that equip\n    const addToCauldron = (equip) => {\n        const exist = cartItems.find((x) => x.name === equip.name);\n        if (exist) {\n            //loop through cartItems, only update the x that x => x.name === equip.name, return the not matching item otherwise\n            setCartItems(cartItems.map((x) => (x.name === equip.name ? { ...exist, qty: exist.qty + 1 } : x)));\n        } else {\n            setCartItems([...cartItems, { ...equip, qty: 1 }]);\n        }\n    };\n\n    const removeFromCauldron = (equip) => {\n        const exist = cartItems.find((x) => x.name === equip.name);\n        if (exist.qty === 1) {\n            setCartItems([...cartItems].filter((x) => x.name !== equip.name));\n        } else {\n            setCartItems(cartItems.map((x) => (x.name === equip.name ? { ...exist, qty: exist.qty - 1 } : x)));\n        }\n    };\n\n    function showSummery() {\n        let newModal = { ...modal };\n        newModal.visible = true;\n        setModal(newModal);\n    }\n\n    function closeModal() {\n        let newModal = { ...modal };\n        newModal.visible = false;\n        setModal(newModal);\n    }\n\n    function resetCart() {\n        alert(\"Order Received!\");\n        setCartItems([]);\n    }\n\n    return (\n        <div>\n            <div className=\"max-container\">\n                <h1>\n                    <div>\n                        <img className=\"header-img\" src={HarryPotterFontImg} alt=\"Harry Potter fonts\"></img>\n                    </div>\n                </h1>\n                <div className=\"overlay-black\">\n                    <ShoppingCart countEquipments={cartItems.length} showModal={showSummery} />\n\n                    <EquipList addToCauldron={addToCauldron} equipments={equipments} />\n                </div>\n                <Summery\n                    modal={modal}\n                    closeModal={closeModal}\n                    addToCauldron={addToCauldron}\n                    removeFromCauldron={removeFromCauldron}\n                    cartItems={cartItems}\n                    resetCart={resetCart}\n                />\n            </div>\n        </div>\n    );\n}\n\nexport default DiagonAlley;\n"]},"metadata":{},"sourceType":"module"}