{"ast":null,"code":"const ShoppingCartReducer = (state = [], action) => {\n  const equip = action.payload;\n  console.log(\"%c [ equip ]\", \"font-size:13px; background:pink; color:#bf2c9f;\", equip.name);\n  const exist = state.find(x => x.name === equip.name);\n\n  switch (action.type) {\n    case \"ADD_TO_CART\":\n      //loop through state, only update the x that x => x.name === equip.name, return the not matching item otherwise\n      if (exist) return state.map(x => x.name === equip.name ? { ...exist,\n        qty: exist.qty + 1\n      } : x);\n      return [...state, { ...equip,\n        qty: 1\n      }];\n\n    case \"REMOVE_FROM_CART\":\n      if (exist.qty === 1) return [...state].filter(x => x.name !== equip.name);\n      return state.map(x => x.name === equip.name ? { ...exist,\n        qty: exist.qty - 1\n      } : x);\n\n    case \"RESET_CART\":\n      state = [];\n      return state;\n\n    default:\n      console.log(\"%c [ state ]\", \"font-size:13px; background:pink; color:#bf2c9f;\", state);\n      return state;\n  }\n};\n\n_c = ShoppingCartReducer;\nexport default ShoppingCartReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShoppingCartReducer\");","map":{"version":3,"sources":["/Users/michauxsun/CPSC455/CPSC455-A234/my_hogwarts_app/src/reducers/ShoppingCartReducer.js"],"names":["ShoppingCartReducer","state","action","equip","payload","console","log","name","exist","find","x","type","map","qty","filter"],"mappings":"AAAA,MAAMA,mBAAmB,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AAClD,QAAMC,KAAK,GAAGD,MAAM,CAACE,OAArB;AACAC,EAAAA,OAAO,CAACC,GAAR,CACE,cADF,EAEE,iDAFF,EAGEH,KAAK,CAACI,IAHR;AAKA,QAAMC,KAAK,GAAGP,KAAK,CAACQ,IAAN,CAAYC,CAAD,IAAOA,CAAC,CAACH,IAAF,KAAWJ,KAAK,CAACI,IAAnC,CAAd;;AACA,UAAQL,MAAM,CAACS,IAAf;AACE,SAAK,aAAL;AACE;AACA,UAAIH,KAAJ,EACE,OAAOP,KAAK,CAACW,GAAN,CAAWF,CAAD,IACfA,CAAC,CAACH,IAAF,KAAWJ,KAAK,CAACI,IAAjB,GAAwB,EAAE,GAAGC,KAAL;AAAYK,QAAAA,GAAG,EAAEL,KAAK,CAACK,GAAN,GAAY;AAA7B,OAAxB,GAA2DH,CADtD,CAAP;AAGF,aAAO,CAAC,GAAGT,KAAJ,EAAW,EAAE,GAAGE,KAAL;AAAYU,QAAAA,GAAG,EAAE;AAAjB,OAAX,CAAP;;AACF,SAAK,kBAAL;AACE,UAAIL,KAAK,CAACK,GAAN,KAAc,CAAlB,EACE,OAAO,CAAC,GAAGZ,KAAJ,EAAWa,MAAX,CAAmBJ,CAAD,IAAOA,CAAC,CAACH,IAAF,KAAWJ,KAAK,CAACI,IAA1C,CAAP;AACF,aAAON,KAAK,CAACW,GAAN,CAAWF,CAAD,IACfA,CAAC,CAACH,IAAF,KAAWJ,KAAK,CAACI,IAAjB,GAAwB,EAAE,GAAGC,KAAL;AAAYK,QAAAA,GAAG,EAAEL,KAAK,CAACK,GAAN,GAAY;AAA7B,OAAxB,GAA2DH,CADtD,CAAP;;AAGF,SAAK,YAAL;AACET,MAAAA,KAAK,GAAG,EAAR;AACA,aAAOA,KAAP;;AACF;AACEI,MAAAA,OAAO,CAACC,GAAR,CACE,cADF,EAEE,iDAFF,EAGEL,KAHF;AAKA,aAAOA,KAAP;AAvBJ;AAyBD,CAjCD;;KAAMD,mB;AAmCN,eAAeA,mBAAf","sourcesContent":["const ShoppingCartReducer = (state = [], action) => {\n  const equip = action.payload;\n  console.log(\n    \"%c [ equip ]\",\n    \"font-size:13px; background:pink; color:#bf2c9f;\",\n    equip.name\n  );\n  const exist = state.find((x) => x.name === equip.name);\n  switch (action.type) {\n    case \"ADD_TO_CART\":\n      //loop through state, only update the x that x => x.name === equip.name, return the not matching item otherwise\n      if (exist)\n        return state.map((x) =>\n          x.name === equip.name ? { ...exist, qty: exist.qty + 1 } : x\n        );\n      return [...state, { ...equip, qty: 1 }];\n    case \"REMOVE_FROM_CART\":\n      if (exist.qty === 1)\n        return [...state].filter((x) => x.name !== equip.name);\n      return state.map((x) =>\n        x.name === equip.name ? { ...exist, qty: exist.qty - 1 } : x\n      );\n    case \"RESET_CART\":\n      state = [];\n      return state;\n    default:\n      console.log(\n        \"%c [ state ]\",\n        \"font-size:13px; background:pink; color:#bf2c9f;\",\n        state\n      );\n      return state;\n  }\n};\n\nexport default ShoppingCartReducer;\n"]},"metadata":{},"sourceType":"module"}